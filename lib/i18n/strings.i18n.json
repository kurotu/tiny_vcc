{
  "lang_name": "English",
  "common": {
    "labels": {
      "yes": "Yes",
      "no": "No",
      "ok": "OK",
      "cancel": "Cancel",
      "dismiss": "Dismiss"
    }
  },
  "navigation": {
    "new_project": "NEW PROJECT",
    "projects": "Projects",
    "settings": "Settings",
    "about": "About Tiny VCC"
  },
  "actions": {
    "add_project": {
      "tooltip": "Add existing project"
    },
    "create_project": {
      "tooltip": "Create new project"
    },
    "open_vcc_settings_folder": {
      "label": "Open VCC Settings Folder"
    },
    "open_logs_folder": {
      "label": "Open Logs Folder"
    }
  },
  "projects": {
    "labels": {
      "open_folder": "Open Folder",
      "remove_from_list": "Remove from list",
      "move_to_recycle_bin": "Move to Recycle Bin",
      "move_to_trash": "Move to Trash"
    },
    "dialogs": {
      "remove_project": {
        "title": "Remove $projectName",
        "content_win": "Are you sure you want to move $projectPath to the Recycle Bin?",
        "content_others": "Are you sure you want to move $projectPath to the Trash?"
      }
    },
    "info": {
      "failed_to_remove": "Failed to remove $projectPath.",
      "error_project_not_supported": "Project \"$path\" is not supported.",
      "error_add_project": "Error occurred when adding a project.",
      "error_project_not_exist": "$projectPath does not exist.",
      "avatar_git_not_supported": "Avatar Git project ($projectPath) is not supported in Tiny VCC.",
      "world_git_not_supported": "World Git project ($projectPath) is not supported in Tiny VCC.",
      "project_is_sdk2": "$projectPath is VRCSDK2 project.",
      "project_is_invalid": "$projectPath is invalid project."
    }
  },
  "settings": {
    "headers": {
      "tiny_vcc_preferences": "Tiny VCC Preferences",
      "vcc_settings": "VCC Settings"
    },
    "labels": {
      "theme": "Theme",
      "language": "Language",
      "unity_editors":"Unity Editors",
      "backups": "Backups",
      "user_packages": "User Packages"
    },
    "theme": {
      "auto": "Auto",
      "light": "Light",
      "dark": "Dark"
    },
    "lang": {
      "auto": "Auto"
    }
  },
  "new_project": {
    "title": "New Project",
    "labels": {
      "project_template": "Project Template",
      "project_name": "Project Name",
      "location": "Location",
      "create": "Create"
    },
    "errors": {
      "select_project_template": "Please select project template.",
      "enter_project_name": "Please enter project name.",
      "enter_location_path": "Please enter location path.",
      "failed_to_create_project": "Failed to create project."
    },
    "info": {
      "creating_project": "Creating $template project, \"$name\" at $location.",
      "created_project": "$template project, \"$name\" has been created at $projectLocation."
    }
  },
  "project": {
    "labels": {
      "open_project": "Open Project",
      "open_folder": "Open Folder",
      "make_backup": "Make Backup",
      "add": "Add",
      "update": "Update",
      "downgrade": "Downgrade",
      "remove": "Remove"
    },
    "info": {
      "packages_changed": "Packages have been changed. Close and reopen Unity project to apply changes.",
      "unity_not_found": "Unity $editorVersion not found in VCC settings."
    },
    "dialogs": {
      "progress_backup": {
        "title": "Backing up $name"
      },
      "made_backup": {
        "title": "Made Backup",
        "labels": {
          "show_me": "Show Me"
        }
      },
      "backup_error": {
        "title": "Backup Error",
        "content": "Failed to back up $projectName.\n\n$error"
      }
    }
  },
  "legacy_project": {
    "labels": {
      "migrate": "Migrate",
      "open_folder": "Open Folder",
      "make_backup": "Make Backup"
    },
    "dialogs": {
      "confirm": {
        "title": "Project Migration",
        "content": "Migration is needed.",
        "labels": {
          "migrate_a_copy": "Migrate a copy",
          "migrate_in_place": "Migrate in place\nI HAVE A BACKUP"
        }
      },
      "progress_backup": {
        "title": "Backing up $name"
      },
      "made_backup": {
        "title": "Made Backup",
        "labels": {
          "show_me": "Show Me"
        }
      },
      "backup_error": {
        "title": "Backup Error",
        "content": "Failed to back up $projectName.\n\n$error"
      },
      "progress_migration": {
        "title": "Migrating $name"
      }
    }
  },
  "requirements": {
    "title": "Requirements",
    "labels": {
      "dotnet6sdk": ".NET 6.0 SDK",
      "vpm_cli": "VPM CLI",
      "unity_hub": "Unity Hub",
      "unity": "Unity",
      "install": "Install",
      "check_again": "Check again"
    },
    "info": {
      "downloading_dotnet": "Downloading .NET 6.0 SDK installer.",
      "installing_dotnet": "Installing .NET 6.0 SDK.",
      "installing_dotnet_with_brew": "Installing .NET 6.0 SDK with Homebrew",
      "see_terminal_to_continue": "See Terminal app to continue installation.",
      "installing_vpm": "Installing VPM CLI",
      "downloading_unity_hub": "Downloading Unity Hub installer.",
      "installing_unity_hub": "Installing Unity Hub.",
      "installing_unity": "Installing Unity"
    },
    "description": {
      "dotnet": "Install .NET 6.0 SDK. You can also download the SDK installer from web.",
      "dotnet_brew": "Install .NET 6.0 SDK with Homebrew. You can also install with following command.",
      "dotnet_linux": "Install .NET 6.0 SDK with package manager. See instruction below.",
      "vpm": "Install VPM CLI. You can also install with following command.",
      "unity_hub": "Install Unity Hub. You can also download the installer from web.",
      "unity_hub_linux": "Install Unity Hub. See instruction below.",
      "unity": "Install Unity with Unity Hub. You can also install from archive, but you should install the exact version which VRChat specifies.",
      "unity_modules": "In manual installation, you must install some modules together:",
      "unity_modules_android": "Android Build Support (to upload for Quest)",
      "unity_modules_mono": "Windows Build Support (mono) (to upload for PC from macOS or Linux)"
    },
    "errors": {
      "failed_to_isntall_dotnet": "Failed to install .NET SDK",
      "failed_to_isntall_vpm": "Failed to install VPM CLI",
      "failed_to_isntall_unity_hub": "Failed to install Unity Hub",
      "failed_to_isntall_unity": "Failed to install Unity"
    }
  }
}
